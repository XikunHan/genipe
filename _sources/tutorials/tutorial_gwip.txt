Pipeline Tutorial
==================

.. note::

   Work on this tutorial is still in progress...


Quick navigation
-----------------

1. :ref:`gwip-tut-softwares`
2. :ref:`gwip-tut-input-files`
3. :ref:`gwip-tut-execute`
4. :ref:`gwip-tut-output-files`

Genome-wide imputation pipeline
--------------------------------

High-throughput genotyping platforms can assess up to five million variations
in thousands of samples. Depending on the genotyped data and the reference
panel used, genome-wide imputation tools can infer genotypes for more than 38
million variants (single nucleotides, insertions and deletions). Unfortunately,
genome-wide imputation requires high computation power and multiple data
processing steps.

The :py:mod:`gwip` pipeline automates the different steps for pre-phasing and
imputation for genome-wide data. The pipeline follows the guideline described
by IMPUTE2's best practices when analyzing genome-wide data (described
`by IMPUTE2 <https://mathgen.stats.ox.ac.uk/impute/impute_v2.html#prephasing>`_
and `by SHAPEIT <http://www.shapeit.fr/pages/m03_phasing/imputation.html>`_).

First, we will create a project directory where all the analysis will be
performed:

.. code-block:: console

   $ mkdir -p $HOME/gwip_tutorial
   $ cd $HOME/gwip_tutorial


.. _gwip-tut-softwares:

Required softwares
^^^^^^^^^^^^^^^^^^^

The main :py:mod:`gwip` pipeline requires three external tools:
`Plink <http://pngu.mgh.harvard.edu/~purcell/plink/>`_,
`IMPUTE2 <https://mathgen.stats.ox.ac.uk/impute/impute_v2.html>`_ and
`SHAPEIT <https://mathgen.stats.ox.ac.uk/genetics_software/shapeit/shapeit.html>`_.
These tools are not required to be located in your ``PATH`` variable, since you
can specify each of their location at runtime.

We will create a directory where the binaries will go:

.. code-block:: console

   $ mkdir -p $HOME/gwip_tutorial/bin
   $ cd $HOME/gwip_tutorial/bin

Plink is freely available. Go to
`Plink download page <http://pngu.mgh.harvard.edu/~purcell/plink/download.shtml>`_,
read the license, and download the most recent version. Extract the binary and
copy it to the ``bin`` directory previously created.

IMPUTE2 is freely available for academic use. Go to
`IMPUTE2 download page <https://mathgen.stats.ox.ac.uk/impute/impute_v2.html#download>`_,
read the license, and download the most recent version. Extract the binary and
copy it to the ``bin`` directory previously created.

SHAPEIT is freely available for academic use. Go to
`SHAPEIT download page <https://mathgen.stats.ox.ac.uk/genetics_software/shapeit/shapeit.html#download>`_,
read the license, and download the most recent version. Extract the binary and
copy it to the ``bin`` directory previously created.

The ``bin`` directory should now contain three binaries:

.. code-block:: console

   $ ls $HOME/gwip_tutorial/bin
   impute2  plink  shapeit


.. _gwip-tut-input-files:

Input files
^^^^^^^^^^^^

Genotypes
""""""""""

The genotypes of the study cohort have to be in Plink's binary pedfile format.
This format allows for time and disk space optimization. Each dataset is
comprised of three files: the ``.bed`` (binary file, genotype information),
``.fam`` (text file, sample information) and ``.bim`` (text file, marker
information) files. Those file are generated by Plink.

Genotype data are provided for this tutorial. They are a subset from the
files provided by Plink on its
`resources page <http://pngu.mgh.harvard.edu/~purcell/plink/res.shtml>`_.
The build was lifted over from *GRCh36* to *GRCh37* using
`USCS liftOver <https://genome.ucsc.edu/cgi-bin/hgLiftOver>`_. Only CEU samples
were kept, along with markers having a completion rate higher or equal to 0.98.
To download the data for this tutorial, execute the following command:

.. code-block:: console

   $ mkdir -p $HOME/gwip_tutorial/data
   $ cd $HOME/gwip_tutorial/data

   $ wget http://pgxcentre.github.io/gwip/_static/hapmap_CEU_r23a_hg19.tar.bz2
   $ tar -jxf hapmap_CEU_r23a_hg19.tar.bz2
   $ rm hapmap_CEU_r23a_hg19.tar.bz2


Reference panels
"""""""""""""""""

IMPUTE2 can use publicly available reference datasets. They provide such
dataset on their website. Go to IMPUTE2's
`reference page <https://mathgen.stats.ox.ac.uk/impute/impute_v2.html#reference>`_, and
download the most recent reference data (which is over 12Gb). Once the
reference is downloaded, extract it in the working directory
(``$HOME/gwip_tutorial``).


Human reference (optional)
"""""""""""""""""""""""""""

The pipeline include a step to check for strand alignment with the reference
panel (using *SHAPEIT*). The drawback of this method is that it is impossible
to verify the strand of markers which are absent from the *IMPUTE2*'s
reference. We have introduce a way to check the strand using the reference
genome (in *fasta* format, indexed using *faidx*).

It is possible to download the human reference (*fasta* format) from
`UCSC's download page <http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/>`_
(the file named ``chromFa.tar.gz``).

.. code-block:: console

   $ mkdir -p $HOME/gwip_tutorial/hg19
   $ cd $HOME/gwip_tutorial/hg19
   $ wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/chromFa.tar.gz

To index the *fasta* file, *samtools* is required at
`htslib's download page <http://www.htslib.org/download/>`_. Once *samtools* is
installed, perform the following command:

.. code-block:: console

   $ samtools faidx hg19.fasta

You should now have two files: ``hg19.fasta`` and ``hg19.fasta.fai``.


DRMAA configuration (optional)
"""""""""""""""""""""""""""""""


Preamble (optional)
""""""""""""""""""""


Summary
""""""""

You should have the following directory tree:

.. code-block:: text

   imputation_project/
   ├── genetic_data.bed
   ├── genetic_data.bim
   ├── genetic_data.fam
   ├── gwip.ini
   ├── preamble.sh
   └── impute2_files/
       └── 1000GP_Phase3
           ├── 1000GP_Phase3_chr1.hap.gz
           ├── 1000GP_Phase3_chr1.legend.gz
           ├── 1000GP_Phase3_chr2.hap.gz
           ├── 1000GP_Phase3_chr2.legend.gz
           ├── ...
           ├── 1000GP_Phase3.sample
           ├── genetic_map_chr1_combined_b37.txt
           ├── genetic_map_chr2_combined_b37.txt
           └── ...


.. _gwip-tut-execute:

Execute the pipeline
^^^^^^^^^^^^^^^^^^^^^


.. _gwip-tut-output-files:

Output files
^^^^^^^^^^^^^

